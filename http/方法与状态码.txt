方法：
get ：请求指定的页面信息，并返回实体主体。
head ：与get一致只是不返回内容，但是会返回状态码
（比如检测某张图片是否存在，不需要返回图片只需要返回200/404即可）
post  ：向指定资源提交数据进行处理请求，数据在主体中
put ：整体更新
patch：局部更新
delete ：删除
trace ：假如使用代理访问某个服务器，服务器则返回最后收到的请求，这样可以知道中途代理有没有修改你的请求
options：返回服务器可用的http方法

虽然Http定义了这些方法但是需要服务器的支持，否则返回405（服务器不支持此方法）


状态码：
1：保留
2：成功
3：重定向
4：客户端错误
5：服务器错误

200 - OK


201 - Created，表示资源创建成功了


204 - No content，成功执行，但是不应该返回任何东西

301/302 永久/暂时重定向

304 - Not Modified 资源未修改，则读取浏览器的缓存即可
关于服务器如何判断浏览器缓存是否有当前资源：
浏览器第一次请求时，相应信息返回200并携带一个etag（一个时间戳）和last-modified（最后修改时间）
浏览器第二次请求的时候，请求信息会携带if-modified-sinice（上次请求的时间）和if-none-match（上次时间戳）
服务器接收到请求之后，通过if-modified-sinice（上次请求的时间）和if-none-match（上次时间戳）判断在上次请求之后资源有没有修改过，如果没有则返回304

307 重定向中保持原有数据
例子：客户端向A发出post请求，A重定向到B。
如果使用301/2重定向，则A重定向到B为get请求，post中的主体信息丢失
使用307，则A重定向到B为Post请求，主体信息保持完好
假如客户端向A发出get请求则301/2/7都可以

400 - Bad request，表示API的消费者发送到服务器的请求是错误的（比如无法按照指定的方式排序）


401 - Unauthorized，表示没有权限


403 - Forbidden，表示用户验证成功，但是该用户仍然无法访问该资源


404 - Not found，表示请求的资源不存在


405 - Method not allowed，这就是当我们尝试发送请求给某个资源时，使用的HTTP方法却是不允许的，
      例如使用POST api/countries, 而该资源只实现了 GET，所以POST不被允许


406 - Not acceptable，这里涉及到了media type，
      例如API消费者请求的是application/xml格式的media type，而API只支持application/json


409 - Conflict，表示该请求无法完成，因为请求与当前资源的状态有冲突，
      例如你编辑某个资源数据以后，该资源又被其它人更新了，这时你再PUT你的数据就会出现409错误；有时也用在尝试创建资源时该资源已存在的情况。


415 - Unsupported media type，这个和406正好返回来，
      比如说我向服务器提交数据的media type是xml的，而服务器只支持json，那么就会返回415
422 - Unprocessable entity，表示请求的格式没问题，但是语义有错误，例如实体验证错误。


500 - Internal server error，这表示是服务器发生了错误

