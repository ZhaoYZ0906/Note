public interface Ixxx
{
bool xxx（int a，int b）；
}

一个类如果继承于两个接口，并且两个接口内具有一致的方法签名则只需要实现一个方法即可

interface i1{ void do（）；}
interface i2{ void do（）；}
实现
void do（）{}

如果两个内具有一致的方法签名但返回值不同那么必须实现两个方法

interface i1{ void do（）；}
interface i2{ int do（）；}
实现
void do（）{}//这个时i1的
int i2.do（）{}//这个调用的时候需要转换为i2接口类型

这种实现成为显式实现，并且显示不可以被重写，但可以重新实现在实现类的子类中，让子类也继承接口重新实现


接口的实现一般为sealed不可重写
如果接口的实现类的子类想要重写须在实现类上手动加virtual


接口（do方法）-》实现类（实现do方法）-》继承类（自己写的do方法）

这时候new一个继承类，所调用的do方法时自己写的do
如果把继承类转换为接口，再调用do方法调用的时实现类中的do方法，因为实现类才是接口的实现，而继承类只是自己给自己写了一个自己用，如果这样也要掉用继承类的do，那么实现类的do加上virtual，子类重写，子类会把实现类给覆盖掉











