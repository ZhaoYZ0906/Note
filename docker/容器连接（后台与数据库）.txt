1 数据库部分（例子使用postgres）
1.1 拉取镜像并且运行成容器

2 后台部分
2.1 写代码
2.2 写dbcontext
2.3 制作成镜像
2.4 运行镜像并且连接



1 数据库部分（例子使用postgres）

1.1 拉取镜像并且运行成容器
正常运行即可，运行的时候需要一些环境变量，文档里面一般都有（我看sqlserver也有）
本例：$ docker run --name 名字 -e POSTGRES_PASSWORD=设定数据库密码 -d postgres
-e POSTGRES_PASSWORD需要的环境变量，还有一些其他的需要的可以看看
用户名默认postgres


2 后台部分

2.1 写代码
正常逻辑代码，不做说明

2.2 写dbcontext
本例使用postgres所以安装对应的ef支持包
本例使用：Npgsql.EntityFrameworkCore.PostgreSQL

dbcontext正常写即可

dbcontext注入：
            services.
                AddEntityFrameworkNpgsql(). //使用sqlserver的时候好像没有这句直接adddbcontext
                AddDbContext<myContent>(option => {
                    var str= Configuration.GetConnectionString("DefaultStr");
                    option.UseNpgsql(str);//使用sqlserver的时候好像没有这句
                }).
                BuildServiceProvider();//创建这个服务
//多了两句话是那个包支持的

需要先手动建立一次数据库迁移（这个只是为了生成迁移的文件）
add-migration xx  使用cli也行

因为在容器里面刚运行的时候还没有创建数据库，则在代码里面在迁移，顺便添加种子数据
myContent.Database.Migrate();
            if (!myContent.students.Any())
            {
                myContent.students.Add(new student()
                {
                   name="zyz",
                   birthDate=DateTime.Now,
                   Grade=100
                });

                myContent.students.Add(new student()
                {
                    name = "wbb",
                    birthDate = DateTime.Now,
                    Grade = 99
                });

                myContent.SaveChanges();

这个是在中间件里面，看看放哪里合适就放哪里

写好监听的地址：
        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>
            WebHost.CreateDefaultBuilder(args)
            .UseUrls("http://*:5000")//这个
                .UseStartup<Startup>();

2.2 需要注意的是
注入时多的两个操作
手动进行一次迁移
自动进行迁移代码（也可以容器手动迁移）
监听地址
链接字符串：Host=temp-postgres;Port=5432;Database=temppostdb;Username=postgres;Password=postgres
Host=temp-postgres; //尽量和容器的名称一致
Port=5432;//容器的端口号 docker ps  -> PORTS 可以看
Database=temppostdb;//数据库名称，别和已有的数据库重名了
Username=postgres;//数据库登录用户名 创建容器的时候可以设置，没设置就是默认的
Password=postgres//数据库登录密码 创建容器的时候必须设置


2.3 制作成镜像
生成dockerfile
然后build

2.4 运行镜像并且连接
docker run -d -p 8000:5000 --link temp-postgres:temp-postgres 镜像名
--link 容器名:连接字符串的Host



















